import type { ESLint } from 'eslint';
import { rules } from './rules/index.js';
declare const configs: {
    recommended: {
        ignores: string[];
        plugins: {
            '@n8n/community-nodes': {
                meta: {
                    name: string;
                    version: string;
                    namespace: string;
                };
                rules: ESLint.Plugin["rules"];
            };
        };
        rules: {
            '@n8n/community-nodes/no-restricted-globals': "error";
            '@n8n/community-nodes/no-restricted-imports': "error";
            '@n8n/community-nodes/credential-password-field': "error";
            '@n8n/community-nodes/no-deprecated-workflow-functions': "error";
            '@n8n/community-nodes/node-usable-as-tool': "error";
            '@n8n/community-nodes/package-name-convention': "error";
            '@n8n/community-nodes/credential-test-required': "error";
            '@n8n/community-nodes/no-credential-reuse': "error";
            '@n8n/community-nodes/icon-validation': "error";
            '@n8n/community-nodes/resource-operation-pattern': "warn";
            '@n8n/community-nodes/credential-documentation-url': "error";
        };
    };
    recommendedWithoutN8nCloudSupport: {
        ignores: string[];
        plugins: {
            '@n8n/community-nodes': {
                meta: {
                    name: string;
                    version: string;
                    namespace: string;
                };
                rules: ESLint.Plugin["rules"];
            };
        };
        rules: {
            '@n8n/community-nodes/credential-password-field': "error";
            '@n8n/community-nodes/no-deprecated-workflow-functions': "error";
            '@n8n/community-nodes/node-usable-as-tool': "error";
            '@n8n/community-nodes/package-name-convention': "error";
            '@n8n/community-nodes/credential-test-required': "error";
            '@n8n/community-nodes/no-credential-reuse': "error";
            '@n8n/community-nodes/icon-validation': "error";
            '@n8n/community-nodes/credential-documentation-url': "error";
            '@n8n/community-nodes/resource-operation-pattern': "warn";
        };
    };
};
declare const pluginWithConfigs: {
    configs: {
        recommended: {
            ignores: string[];
            plugins: {
                '@n8n/community-nodes': {
                    meta: {
                        name: string;
                        version: string;
                        namespace: string;
                    };
                    rules: ESLint.Plugin["rules"];
                };
            };
            rules: {
                '@n8n/community-nodes/no-restricted-globals': "error";
                '@n8n/community-nodes/no-restricted-imports': "error";
                '@n8n/community-nodes/credential-password-field': "error";
                '@n8n/community-nodes/no-deprecated-workflow-functions': "error";
                '@n8n/community-nodes/node-usable-as-tool': "error";
                '@n8n/community-nodes/package-name-convention': "error";
                '@n8n/community-nodes/credential-test-required': "error";
                '@n8n/community-nodes/no-credential-reuse': "error";
                '@n8n/community-nodes/icon-validation': "error";
                '@n8n/community-nodes/resource-operation-pattern': "warn";
                '@n8n/community-nodes/credential-documentation-url': "error";
            };
        };
        recommendedWithoutN8nCloudSupport: {
            ignores: string[];
            plugins: {
                '@n8n/community-nodes': {
                    meta: {
                        name: string;
                        version: string;
                        namespace: string;
                    };
                    rules: ESLint.Plugin["rules"];
                };
            };
            rules: {
                '@n8n/community-nodes/credential-password-field': "error";
                '@n8n/community-nodes/no-deprecated-workflow-functions': "error";
                '@n8n/community-nodes/node-usable-as-tool': "error";
                '@n8n/community-nodes/package-name-convention': "error";
                '@n8n/community-nodes/credential-test-required': "error";
                '@n8n/community-nodes/no-credential-reuse': "error";
                '@n8n/community-nodes/icon-validation': "error";
                '@n8n/community-nodes/credential-documentation-url': "error";
                '@n8n/community-nodes/resource-operation-pattern': "warn";
            };
        };
    };
    meta: {
        name: string;
        version: string;
        namespace: string;
    };
    rules: ESLint.Plugin["rules"];
};
declare const n8nCommunityNodesPlugin: {
    configs: {
        recommended: {
            ignores: string[];
            plugins: {
                '@n8n/community-nodes': {
                    meta: {
                        name: string;
                        version: string;
                        namespace: string;
                    };
                    rules: ESLint.Plugin["rules"];
                };
            };
            rules: {
                '@n8n/community-nodes/no-restricted-globals': "error";
                '@n8n/community-nodes/no-restricted-imports': "error";
                '@n8n/community-nodes/credential-password-field': "error";
                '@n8n/community-nodes/no-deprecated-workflow-functions': "error";
                '@n8n/community-nodes/node-usable-as-tool': "error";
                '@n8n/community-nodes/package-name-convention': "error";
                '@n8n/community-nodes/credential-test-required': "error";
                '@n8n/community-nodes/no-credential-reuse': "error";
                '@n8n/community-nodes/icon-validation': "error";
                '@n8n/community-nodes/resource-operation-pattern': "warn";
                '@n8n/community-nodes/credential-documentation-url': "error";
            };
        };
        recommendedWithoutN8nCloudSupport: {
            ignores: string[];
            plugins: {
                '@n8n/community-nodes': {
                    meta: {
                        name: string;
                        version: string;
                        namespace: string;
                    };
                    rules: ESLint.Plugin["rules"];
                };
            };
            rules: {
                '@n8n/community-nodes/credential-password-field': "error";
                '@n8n/community-nodes/no-deprecated-workflow-functions': "error";
                '@n8n/community-nodes/node-usable-as-tool': "error";
                '@n8n/community-nodes/package-name-convention': "error";
                '@n8n/community-nodes/credential-test-required': "error";
                '@n8n/community-nodes/no-credential-reuse': "error";
                '@n8n/community-nodes/icon-validation': "error";
                '@n8n/community-nodes/credential-documentation-url': "error";
                '@n8n/community-nodes/resource-operation-pattern': "warn";
            };
        };
    };
    meta: {
        name: string;
        version: string;
        namespace: string;
    };
    rules: ESLint.Plugin["rules"];
};
export default pluginWithConfigs;
export { rules, configs, n8nCommunityNodesPlugin };
//# sourceMappingURL=plugin.d.ts.map